<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2024-09-22T12:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2024-0374: Vulnerability in ouch</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0374.html</id><updated>2024-09-22T12:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0374.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0374: Vulnerability in ouch"/><published>2024-09-22T12:00:00+00:00</published><summary xml:lang="en">Segmentation fault due to use of uninitialized memory</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/ouch/RUSTSEC-2024-0374.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/ouch/RUSTSEC-2024-0374.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0374&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0374
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Segmentation fault due to use of uninitialized memory&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-22&quot;&gt;
          September 22, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-22&quot;&gt;
          September 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/ouch.html&quot;&gt;ouch&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/ouch&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/ouch-org/ouch/issues/707&quot;&gt;
              https://github.com/ouch-org/ouch/issues/707
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.3.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;ouch::archive::zip::convert_zip_date_time&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=0.3.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;When trying to decompress a file using &amp;quot;ouch&amp;quot;, we can reach the function &amp;quot;ouch::archive::zip::convert_zip_date_time&amp;quot;.
In the function, there is a unsafe function, &amp;quot;transmute&amp;quot;. Once the &amp;quot;transmute&amp;quot; function is called to convert the type of &amp;quot;month&amp;quot; object,
the address of the object is changed to the uninitialized memory region.
After that, when other function tries to dereference &amp;quot;month&amp;quot;, segmentation fault occurs.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0086: Unsoundness in lexical-core</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0086.html</id><updated>2024-09-16T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2023-0086.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0086: Unsoundness in lexical-core"/><published>2024-09-16T12:00:00+00:00</published><summary xml:lang="en">Multiple soundness issues</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/lexical-core/RUSTSEC-2023-0086.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/lexical-core/RUSTSEC-2023-0086.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2023-0086&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0086
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Multiple soundness issues&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-09-03&quot;&gt;
          September  3, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-16&quot;&gt;
          September 16, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/lexical-core.html&quot;&gt;lexical-core&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/lexical-core&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/102&quot;&gt;
              https://github.com/Alexhuszagh/rust-lexical/issues/102
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/101&quot;&gt;
              https://github.com/Alexhuszagh/rust-lexical/issues/101
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/95&quot;&gt;
              https://github.com/Alexhuszagh/rust-lexical/issues/95
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/104&quot;&gt;
              https://github.com/Alexhuszagh/rust-lexical/issues/104
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/126&quot;&gt;
              https://github.com/Alexhuszagh/rust-lexical/issues/126
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://rustsec.org/advisories/RUSTSEC-2023-0055&quot;&gt;RUSTSEC-2023-0055&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;&lt;code&gt;RUSTSEC-2024-0377&lt;/code&gt; contains multiple soundness issues:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/102&quot;&gt;Bytes::read() allows creating instances of types with invalid bit patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/101&quot;&gt;BytesIter::read() advances iterators out of bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/104&quot;&gt;The &lt;code&gt;BytesIter&lt;/code&gt; trait has safety invariants but is public and not marked &lt;code&gt;unsafe&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/95&quot;&gt;&lt;code&gt;write_float()&lt;/code&gt; calls &lt;code&gt;MaybeUninit::assume_init()&lt;/code&gt; on uninitialized data, which is is not allowed by the Rust abstract machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alexhuszagh/rust-lexical/issues/126&quot;&gt;&lt;code&gt;radix()&lt;/code&gt; calls &lt;code&gt;MaybeUninit::assume_init()&lt;/code&gt; on uninitialized data, which is is not allowed by the Rust abstract machine&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Version 1.0 fixes these issues, removes the vast majority of &lt;code&gt;unsafe&lt;/code&gt; code, and also fixes some correctness issues.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0373: Vulnerability in quinn-proto</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0373.html</id><updated>2024-09-08T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0373.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0373: Vulnerability in quinn-proto"/><published>2024-09-08T12:00:00+00:00</published><summary xml:lang="en">`Endpoint::retry()` calls can lead to panicking</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/quinn-proto/RUSTSEC-2024-0373.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/quinn-proto/RUSTSEC-2024-0373.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0373&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0373
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;Endpoint::retry()&lt;/code&gt; calls can lead to panicking&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-02&quot;&gt;
          September  2, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-08&quot;&gt;
          September  8, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/quinn-proto.html&quot;&gt;quinn-proto&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/quinn-proto&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/panic.html&quot;&gt;#panic&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-vr26-jcq5-fjj8&quot;&gt;GHSA-vr26-jcq5-fjj8&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45311&quot;&gt;CVE-2024-45311&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/quinn-rs/quinn&quot;&gt;
              https://github.com/quinn-rs/quinn
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;7.5 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.7&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;In 0.11.0, we overhauled the server-side &lt;code&gt;Endpoint&lt;/code&gt; implementation to enable
more careful handling of incoming connection attempts. However, some of the
code paths that cleaned up state after connection attempts were processed
confused the initial destination connection ID with the destination connection
ID of a substantial package. This resulted in the internal &lt;code&gt;Endpoint&lt;/code&gt; state
becoming inconsistent, which could then lead to a panic.&lt;/p&gt;
&lt;p&gt;https://github.com/quinn-rs/quinn/commit/e01609ccd8738bd438d86fa7185a0f85598cb58f&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/finnbear&quot;&gt;@finbear&lt;/a&gt; for reporting and investingating,
and to &lt;a href=&quot;https://github.com/BiagoFesta&quot;&gt;@BiagoFesta&lt;/a&gt; for coordinating.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0371: Vulnerability in gix-path</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0371.html</id><updated>2024-09-07T12:00:00+00:00</updated><category term="code-execution"/><category term="privilege-escalation"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0371.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0371: Vulnerability in gix-path"/><published>2024-09-07T12:00:00+00:00</published><summary xml:lang="en">gix-path improperly resolves configuration path reported by Git</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/gix-path/RUSTSEC-2024-0371.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/gix-path/RUSTSEC-2024-0371.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0371&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0371
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;gix-path improperly resolves configuration path reported by Git&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-06&quot;&gt;
          September  6, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-07&quot;&gt;
          September  7, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/gix-path.html&quot;&gt;gix-path&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/gix-path&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/code-execution.html&quot;&gt;code-execution&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/privilege-escalation.html&quot;&gt;privilege-escalation&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/escape-sequences.html&quot;&gt;#escape-sequences&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45405&quot;&gt;CVE-2024-45405&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-m8rp-vv92-46c7&quot;&gt;GHSA-m8rp-vv92-46c7&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Byron/gitoxide/security/advisories/GHSA-m8rp-vv92-46c7&quot;&gt;
              https://github.com/Byron/gitoxide/security/advisories/GHSA-m8rp-vv92-46c7
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/advisories/GHSA-m8rp-vv92-46c7&quot;&gt;
              https://github.com/advisories/GHSA-m8rp-vv92-46c7
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;6 &lt;span class=&quot;tag medium&quot;&gt;
        MEDIUM
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;High&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;Required&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:N&quot;&gt;CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:N&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.11&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;gix_path::env::installation_config&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;gix_path::env::installation_config_prefix&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gix-path&lt;/code&gt; runs &lt;code&gt;git&lt;/code&gt; to find the path of a configuration file associated with the &lt;code&gt;git&lt;/code&gt; installation, but improperly resolves paths containing unusual or non-ASCII characters, in rare cases enabling a local attacker to inject configuration leading to code execution.&lt;/p&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;gix_path::env&lt;/code&gt;, the underlying implementation of the &lt;code&gt;installation_config&lt;/code&gt; and &lt;code&gt;installation_config_prefix&lt;/code&gt; functions calls &lt;code&gt;git config -l --show-origin&lt;/code&gt; to find the path of a file to treat as belonging to the &lt;code&gt;git&lt;/code&gt; installation.&lt;/p&gt;
&lt;p&gt;Affected versions of &lt;code&gt;gix-path&lt;/code&gt; do not pass &lt;code&gt;-z&lt;/code&gt;/&lt;code&gt;--null&lt;/code&gt; to cause &lt;code&gt;git&lt;/code&gt; to report literal paths (&lt;a href=&quot;https://github.com/Byron/gitoxide/commit/650a1b5cf25e086197cc55a68525a411e1c28031&quot;&gt;&lt;code&gt;650a1b5&lt;/code&gt;&lt;/a&gt;). Instead, to cover the occasional case that &lt;code&gt;git&lt;/code&gt; outputs a quoted path, they attempt to parse the path by stripping the quotation marks:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Byron/gitoxide/blob/1cfe577d461293879e91538dbc4bbfe01722e1e8/gix-path/src/env/git/mod.rs#L138-L142&quot;&gt;https://github.com/Byron/gitoxide/blob/1cfe577d461293879e91538dbc4bbfe01722e1e8/gix-path/src/env/git/mod.rs#L138-L142&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The problem is that, when a path is quoted, it may change in substantial ways beyond the concatenation of quotation marks. If not reversed, these changes can result in another valid path that is not equivalent to the original.&lt;/p&gt;
&lt;p&gt;This is not limited to paths with unusual characters such as quotation marks or newlines. Unless &lt;code&gt;git&lt;/code&gt; is explicitly configured with &lt;code&gt;core.quotePath&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;, it also happens when the path contains most non-ASCII characters, including accented or non-English letters. For example, &lt;code&gt;é&lt;/code&gt; is transformed to &lt;code&gt;\303\251&lt;/code&gt;, with literal backslashes. (This is an octal representation of the bytes in its UTF-8 encoding. This behavior is not limited to systems that encode paths with UTF-8 on disk.)&lt;/p&gt;
&lt;p&gt;Rarely, the configuration file &lt;code&gt;gix-path&lt;/code&gt; wrongly attempts to open can be created by an attacker who has a limited user account on the system. The attacker would often need to request an account username tailored to carrying out the attack.&lt;/p&gt;
&lt;h3&gt;PoC&lt;/h3&gt;
&lt;h4&gt;Quick demonstration on Unix&lt;/h4&gt;
&lt;p&gt;On a Unix-like system in which Git supports no higher scope than &lt;code&gt;system&lt;/code&gt; for configuration variables (i.e., not on macOS with Apple Git), in a locale that supports UTF-8, with &lt;code&gt;gitoxide&lt;/code&gt; installed, run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;mkdir myrepo
cd myrepo
git init
printf &apos;[real]\n\trealvar = realval\n&apos; &amp;gt; &apos;é&apos;
printf &apos;[fake]\n\tfakevar = fakeval\n&apos; &amp;gt; &apos;\303\251&apos;
GIT_CONFIG_SYSTEM=&apos;é&apos; gix config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the above conditions are satisfied and the &lt;code&gt;gix&lt;/code&gt; command was built against an affected version of &lt;code&gt;gix-path&lt;/code&gt;, then the last command&apos;s output looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;# From &apos;\303\251&apos; (GitInstallation)
[fake]
        fakevar = fakeval

# From &apos;é&apos; (System)
[real]
        realvar = realval

# From &apos;/home/ubuntu/.gitconfig&apos; (User)
[init]
        defaultBranch = main

# From &apos;./.git/config&apos; (Local)
[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Demonstration across user accounts on Windows&lt;/h4&gt;
&lt;p&gt;On a test system running Windows on which Git for Windows is &lt;em&gt;not&lt;/em&gt; installed system-wide—resembling a scenario in which users who wish to use Git are expected to install it themselves for their accounts—create two accounts, with these usernames:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Renée&lt;/em&gt;, the target of the attack. This user may be a limited user or an administrator. Its user profile directory is assumed to be &lt;code&gt;C:\Users\Renée&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ren&lt;/em&gt;, the user who carries out the attack. This user should be a limited user, since an administrator would not need to exploit this vulnerability to inject configuration. Its user profile directory is assumed to be &lt;code&gt;C:\Users\Ren&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As &lt;em&gt;Ren&lt;/em&gt;, run these commands in PowerShell:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;$d = &amp;quot;$HOME\303\251e\AppData\Local\Programs\Git\etc&amp;quot;
mkdir $d
git config --file $d\gitconfig core.sshCommand calc.exe
icacls $HOME\303 /grant &apos;Renée:(RX)&apos; /T
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(The &lt;code&gt;gitconfig&lt;/code&gt; file can instead be written manually, in which case &lt;em&gt;Ren&lt;/em&gt; need not have &lt;code&gt;git&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;As &lt;em&gt;Renée&lt;/em&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install Git for Windows in the default location for non-systemwide installations, which for that user account is inside &lt;code&gt;C:\Users\Renée\AppData\Local\Programs&lt;/code&gt;. For a non-administrative installation, Git for Windows will pick this location automatically. Allow the installer to place the directory containing &lt;code&gt;git&lt;/code&gt; in the user&apos;s &lt;code&gt;PATH&lt;/code&gt;, as it does by default.&lt;/p&gt;
&lt;p&gt;(The scenario can be modified for any location the attacker can predict. So, for example, &lt;em&gt;Renée&lt;/em&gt; can install Git for Windows with &lt;a href=&quot;https://scoop.sh/&quot;&gt;&lt;code&gt;scoop&lt;/code&gt;&lt;/a&gt;, and &lt;em&gt;Ren&lt;/em&gt; could carry out the attack with correspondingly modified path components in place of &lt;code&gt;AppData\Local\Programs\Git&lt;/code&gt;.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;gitoxide&lt;/code&gt; using any common technique, such as by &lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;installing Rust&lt;/a&gt; and then running &lt;code&gt;cargo install gitoxide&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a PowerShell window and run a &lt;code&gt;gix&lt;/code&gt; command that attempts to run the SSH client for transport. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-pwsh&quot;&gt;gix clone ssh://localhost/myrepo.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At least one, and usually two, instances of the Windows calculator will pop up. This happens because &lt;code&gt;calc.exe&lt;/code&gt; was configured in the fake configuration file the user &lt;em&gt;Ren&lt;/em&gt; was able to cause to be used, by placing it at the location &lt;code&gt;gix-path&lt;/code&gt; wrongly resolved the path of &lt;em&gt;Renée&lt;/em&gt;&apos;s own configuration file to.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;code&gt;gitconfig&lt;/code&gt; file written by the attacker can be adjusted with an arbitrary choice of payload, or to set other configuration variables.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;On a single-user system, it is not possible to exploit this, unless &lt;code&gt;GIT_CONFIG_SYSTEM&lt;/code&gt; and &lt;code&gt;GIT_CONFIG_GLOBAL&lt;/code&gt; have been set to unusual values or Git has been installed in an unusual way. Such a scenario is not expected.&lt;/p&gt;
&lt;p&gt;Exploitation is unlikely even on a multi-user system, though it is plausible in some uncommon configurations or use cases. It is especially unlikely with Apple Git on macOS, due to its very high scoped configuration in &lt;code&gt;/Library&lt;/code&gt; or &lt;code&gt;/Applications&lt;/code&gt; that would be detected instead, as in &lt;a href=&quot;https://github.com/advisories/GHSA-v26r-4c9c-h3j6&quot;&gt;CVE-2024-45305&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The likelihood of exploitation may be higher on Windows, where attacks such as those shown in the Windows proof-of-concept above can be performed due to the status of &lt;code&gt;\&lt;/code&gt; as a directory separator, and where there is no restriction on usernames containing accented or non-English letters (though the latter is also permitted on some other systems). Even then, complex user interaction is required. In most cases, a system administrator would have to approve an innocuous-seeming username, and then the targeted user (who could be the same or a different user) would have to use an application that uses &lt;code&gt;gix-path&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In general, exploitation is more likely to succeed if at least one of the following applies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users are expected to install &lt;code&gt;git&lt;/code&gt; themselves, and are likely to do so in predictable locations.&lt;/li&gt;
&lt;li&gt;Locations where &lt;code&gt;git&lt;/code&gt; is installed, whether due to usernames in their paths or otherwise, contain characters that &lt;code&gt;git&lt;/code&gt; quotes by default in paths, such as non-English letters and accented letters.&lt;/li&gt;
&lt;li&gt;A custom &lt;code&gt;system&lt;/code&gt;-scope configuration file is specified with the &lt;code&gt;GIT_CONFIG_SYSTEM&lt;/code&gt; environment variable, and its path is in an unusual location or has strangely named components.&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;system&lt;/code&gt;-scope configuration file is absent, empty, or suppressed by means other than &lt;code&gt;GIT_CONFIG_NOSYSTEM&lt;/code&gt;. Currently, &lt;code&gt;gix-path&lt;/code&gt; can treat a &lt;code&gt;global&lt;/code&gt;-scope configuration file as belonging to the installation if no higher scope configuration file is available. This increases the likelihood of exploitation even on a system where &lt;code&gt;git&lt;/code&gt; is installed system-wide in an ordinary way.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, exploitation is expected to be very difficult even under any combination of those factors.&lt;/p&gt;
&lt;p&gt;Although the effect here is similar to &lt;a href=&quot;https://github.com/git-for-windows/git/security/advisories/GHSA-vw2c-22j4-2fh2&quot;&gt;CVE-2022-24765&lt;/a&gt; once exploited, a greater degree of user interaction would usually be required, and the attack complexity here is much higher because the necessary conditions are uncommon and challenging to predict.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0372: Vulnerability in ic-cdk</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0372.html</id><updated>2024-09-07T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0372.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0372: Vulnerability in ic-cdk"/><published>2024-09-07T12:00:00+00:00</published><summary xml:lang="en">Memory leak when calling a canister method via `ic_cdk::call`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/ic-cdk/RUSTSEC-2024-0372.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/ic-cdk/RUSTSEC-2024-0372.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0372&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0372
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Memory leak when calling a canister method via &lt;code&gt;ic_cdk::call&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-05&quot;&gt;
          September  5, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-07&quot;&gt;
          September  7, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/ic-cdk.html&quot;&gt;ic-cdk&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/ic-cdk&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/canister.html&quot;&gt;#canister&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/icp.html&quot;&gt;#icp&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/cdk.html&quot;&gt;#cdk&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-7884&quot;&gt;CVE-2024-7884&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-rwq6-crjg-9cpw&quot;&gt;GHSA-rwq6-crjg-9cpw&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/dfinity/cdk-rs/pull/509&quot;&gt;
              https://github.com/dfinity/cdk-rs/pull/509
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;7.5 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.6&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.12.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.13.5&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.14.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.15.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.16.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.8.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;When a canister method is called via &lt;code&gt;ic_cdk::call*&lt;/code&gt;, a new Future &lt;code&gt;CallFuture&lt;/code&gt; is created  and can be awaited by the caller to get the execution result. Internally, the state of the Future is tracked and stored in a struct called &lt;code&gt;CallFutureState&lt;/code&gt;.  A bug in the polling implementation of the &lt;code&gt;CallFuture&lt;/code&gt; allows multiple references to be held for this internal state and not all references were dropped before the &lt;code&gt;Future&lt;/code&gt; is resolved. Since we have unaccounted references held, a copy of the internal state ended up being persisted in the canister&apos;s heap and thus causing a memory leak.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;Canisters built in Rust with &lt;code&gt;ic_cdk&lt;/code&gt; and &lt;code&gt;ic_cdk_timers&lt;/code&gt; are affected. If these canisters call a canister method, use timers or heartbeat, they will likely leak a small amount of memory on every such operation. &lt;strong&gt;In the worst case, this could lead to heap memory exhaustion triggered by an attacker.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Motoko based canisters are not affected by the bug.&lt;/p&gt;
&lt;h3&gt;Patches&lt;/h3&gt;
&lt;p&gt;The patch has been backported to all minor versions between &lt;code&gt;&amp;gt;= 0.8.0, &amp;lt;= 0.15.0&lt;/code&gt;. The patched versions available are &lt;code&gt;0.8.2, 0.9.3, 0.10.1, 0.11.6, 0.12.2, 0.13.5, 0.14.1, 0.15.1&lt;/code&gt; and their previous versions have been yanked.&lt;/p&gt;
&lt;h3&gt;Workarounds&lt;/h3&gt;
&lt;p&gt;There are no known workarounds at the moment. Developers are recommended to upgrade their canister as soon as possible to the latest available patched version of &lt;code&gt;ic_cdk&lt;/code&gt; to avoid running out of Wasm heap memory.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Upgrading the canisters (without updating &lt;code&gt;ic_cdk&lt;/code&gt;) also frees the leaked memory but it&apos;s only a temporary solution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Referencesas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dfinity/cdk-rs/pull/509&quot;&gt;dfinity/cdk-rs/pull/509&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/ic-cdk/latest/ic_cdk/&quot;&gt;ic_cdk docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://internetcomputer.org/docs/current/references/ic-interface-spec&quot;&gt;Internet Computer Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0370: proc-macro-error is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0370.html</id><updated>2024-09-09T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0370.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0370: proc-macro-error is unmaintained"/><published>2024-09-05T12:00:00+00:00</published><summary xml:lang="en">proc-macro-error is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/proc-macro-error/RUSTSEC-2024-0370.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/proc-macro-error/RUSTSEC-2024-0370.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0370&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0370
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;proc-macro-error is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-01&quot;&gt;
          September  1, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-05&quot;&gt;
          September  5, 2024
        &lt;/time&gt;
        
        &lt;time datetime=&quot;2024-09-09&quot;&gt;
          (last modified: September  9, 2024)
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/proc-macro-error.html&quot;&gt;proc-macro-error&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/proc-macro-error&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20&quot;&gt;
              https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;proc-macro-error&apos;s maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.&lt;/p&gt;
&lt;p&gt;proc-macro-error also depends on &lt;code&gt;syn 1.x&lt;/code&gt;, which may be bringing duplicate dependencies into dependant build trees.&lt;/p&gt;
&lt;h2&gt;Possible Alternative(s)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/manyhow&quot;&gt;manyhow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/proc-macro-error2&quot;&gt;proc-macro-error2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/SergioBenitez/proc-macro2-diagnostics&quot;&gt;proc-macro2-diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0369: Vulnerability in phonenumber</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0369.html</id><updated>2024-09-05T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0369.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0369: Vulnerability in phonenumber"/><published>2024-09-05T12:00:00+00:00</published><summary xml:lang="en">phonenumber:  panic on parsing crafted phonenumber inputs</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/phonenumber/RUSTSEC-2024-0369.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/phonenumber/RUSTSEC-2024-0369.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0369&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0369
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;phonenumber:  panic on parsing crafted phonenumber inputs&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-07-07&quot;&gt;
          July  7, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-05&quot;&gt;
          September  5, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/phonenumber.html&quot;&gt;phonenumber&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/phonenumber&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/panic.html&quot;&gt;#panic&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/untrusted-input.html&quot;&gt;#untrusted-input&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/parsing.html&quot;&gt;#parsing&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697&quot;&gt;CVE-2024-39697&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-mjw4-jj88-v687&quot;&gt;GHSA-mjw4-jj88-v687&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687&quot;&gt;
              https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697&quot;&gt;
              https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;8.6 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Changed&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.6&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.3.3&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;phonenumber::parse&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;The phonenumber parsing code may panic due to a reachable &lt;code&gt;assert!&lt;/code&gt; guard on the phonenumber string.&lt;/p&gt;
&lt;p&gt;In a typical deployment of rust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber, e.g. over the network, specifically strings of the form &lt;code&gt;+dwPAA;phone-context=AA&lt;/code&gt;, where the &amp;quot;number&amp;quot; part potentially parses as a number larger than 2^56.&lt;/p&gt;
&lt;p&gt;Since f69abee1/0.3.4/#52.&lt;/p&gt;
&lt;p&gt;0.2.x series is not affected.&lt;/p&gt;
&lt;h3&gt;Patches&lt;/h3&gt;
&lt;p&gt;Patches have been published as version &lt;code&gt;0.3.6+8.13.36&lt;/code&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0368: Vulnerability in olm-sys</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0368.html</id><updated>2024-09-02T12:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0368.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0368: Vulnerability in olm-sys"/><published>2024-09-02T12:00:00+00:00</published><summary xml:lang="en">olm-sys: wrapped library unmaintained, potentially vulnerable</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/olm-sys/RUSTSEC-2024-0368.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/olm-sys/RUSTSEC-2024-0368.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0368&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0368
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;olm-sys: wrapped library unmaintained, potentially vulnerable&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-02&quot;&gt;
          September  2, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-02&quot;&gt;
          September  2, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/olm-sys.html&quot;&gt;olm-sys&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/olm-sys&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://gitlab.gnome.org/BrainBlasted/olm-sys/-/issues/12&quot;&gt;
              https://gitlab.gnome.org/BrainBlasted/olm-sys/-/issues/12
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://matrix.org/blog/2024/08/libolm-deprecation/&quot;&gt;
              https://matrix.org/blog/2024/08/libolm-deprecation/
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45191&quot;&gt;CVE-2024-45191&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45192&quot;&gt;CVE-2024-45192&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45193&quot;&gt;CVE-2024-45193&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;After several cryptographic vulnerabilities in &lt;code&gt;libolm&lt;/code&gt; were disclosed publicly, the Matrix Foundation has &lt;a href=&quot;https://matrix.org/blog/2024/08/libolm-deprecation/&quot;&gt;officially deprecated the library&lt;/a&gt;. &lt;code&gt;olm-sys&lt;/code&gt; is a thin wrapper around &lt;code&gt;libolm&lt;/code&gt; and is now deprecated and potentially vulnerable in kind.&lt;/p&gt;
&lt;p&gt;Users of &lt;code&gt;olm-sys&lt;/code&gt; and its higher-level abstraction, &lt;code&gt;olm-rs&lt;/code&gt;, are highly encouraged to switch to &lt;a href=&quot;https://crates.io/crates/vodozemac&quot;&gt;&lt;code&gt;vodozemac&lt;/code&gt;&lt;/a&gt; as soon as possible. It is the successor effort to &lt;code&gt;libolm&lt;/code&gt; and is written in Rust.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0367: Vulnerability in gix-path</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0367.html</id><updated>2024-09-03T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0367.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0367: Vulnerability in gix-path"/><published>2024-09-01T12:00:00+00:00</published><summary xml:lang="en">gix-path uses local config across repos when it is the highest scope</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/gix-path/RUSTSEC-2024-0367.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/gix-path/RUSTSEC-2024-0367.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0367&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0367
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;gix-path uses local config across repos when it is the highest scope&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-31&quot;&gt;
          August 31, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-01&quot;&gt;
          September  1, 2024
        &lt;/time&gt;
        
        &lt;time datetime=&quot;2024-09-03&quot;&gt;
          (last modified: September  3, 2024)
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/gix-path.html&quot;&gt;gix-path&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/gix-path&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/configuration-failure.html&quot;&gt;#configuration-failure&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/information-leak.html&quot;&gt;#information-leak&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45305&quot;&gt;CVE-2024-45305&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-v26r-4c9c-h3j6&quot;&gt;GHSA-v26r-4c9c-h3j6&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6&quot;&gt;
              https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/advisories/GHSA-v26r-4c9c-h3j6&quot;&gt;
              https://github.com/advisories/GHSA-v26r-4c9c-h3j6
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2024-45305&quot;&gt;
              https://nvd.nist.gov/vuln/detail/CVE-2024-45305
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;2.5 &lt;span class=&quot;tag low&quot;&gt;
        LOW
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;High&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;Required&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N&quot;&gt;CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;gix_path::env::installation_config&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;gix_path::env::installation_config_prefix&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gix-path&lt;/code&gt; executes &lt;code&gt;git&lt;/code&gt; to find the path of a configuration file that belongs to the &lt;code&gt;git&lt;/code&gt; installation itself, but mistakenly treats the local repository&apos;s configuration as system-wide if no higher scoped configuration is found. In rare cases, this causes a less trusted repository to be treated as more trusted, or leaks sensitive information from one repository to another, such as sending credentials to another repository&apos;s remote.&lt;/p&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;gix_path::env&lt;/code&gt;, the underlying implementation of the &lt;code&gt;installation_config&lt;/code&gt; and &lt;code&gt;installation_config_prefix&lt;/code&gt; functions calls &lt;code&gt;git config -l --show-origin&lt;/code&gt; and parses the first line of the output to extract the path to the configuration file holding the configuration variable of highest &lt;a href=&quot;https://git-scm.com/docs/git-config#SCOPES&quot;&gt;scope&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L91&quot;&gt;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L91&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L112&quot;&gt;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L112&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While the configuration variable of highest scope is not usually in the local scope, there are practical situations where this occurs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A configuration file truly associated with the installation is not present on all systems and can occasionally be empty. Likewise, there may be no variables in the global scope.&lt;/li&gt;
&lt;li&gt;Configuration files associated with those higher scopes may be deliberately skipped by setting the &lt;code&gt;GIT_CONFIG_SYSTEM&lt;/code&gt; and &lt;code&gt;GIT_CONFIG_GLOBAL&lt;/code&gt; environment variables to &lt;code&gt;/dev/null&lt;/code&gt; (or to &lt;code&gt;NUL&lt;/code&gt; on Windows). This prevents &lt;code&gt;gix-path&lt;/code&gt; from finding the path of configuration files for those scopes, while not preventing downstream components such as the function in &lt;code&gt;gix-config&lt;/code&gt; from reporting a local path as being associated with the installation.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;GIT_CONFIG_NOSYSTEM&lt;/code&gt; environment variable can be used to disable configuration associated with the installation. (&lt;code&gt;GIT_CONFIG_NOSYSTEM=1&lt;/code&gt; is more powerful than &lt;code&gt;GIT_CONFIG_SYSTEM=/dev/null&lt;/code&gt; on systems where an additional &amp;quot;unknown&amp;quot; scope is associated with the installation, as occurs on macOS with Apple Git.) This will cause the local scope to be the highest nonempty scope under even more situations, though in practice it is less dangerous because most, though possibly not all, downstream components would disregard the value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A user may use either or both of the latter two techniques to turn off an undesired configuration or to create a more replicable environment. Such a user would expect that this results in a more controlled configuration.&lt;/p&gt;
&lt;p&gt;Often, when located inside one repository, a user performs operations on that repository or that are not specific to any repository. In such use, local configuration is typically desired or at least acceptable, and mistaking it as coming from another scope is not typically harmful.&lt;/p&gt;
&lt;p&gt;However, sometimes a user is in one repository and operates on another repository. A major case where this occurs is cloning one repository while located in another. This can be done in an ad-hoc fashion, including when cloning the repository outside of the one we are inside. It may also potentially be automated by an application for purposes such as submodule handling. Two kinds of problems are anticipated:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A less secure configuration may be set for a specific repository where it is judged acceptable, even though it would not be wanted for other repositories, such as to enable a protocol or set up debugging.&lt;/li&gt;
&lt;li&gt;More likely, a configuration that supplies secrets for use in one repository&apos;s remote can be used to send those secrets to another repository&apos;s remote.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;PoC&lt;/h3&gt;
&lt;p&gt;In this example, we send mock &lt;code&gt;Authorization: Basic ...&lt;/code&gt; credentials meant for one repository&apos;s remote to another remote, by running &lt;code&gt;gix&lt;/code&gt; while inside the first repository to clone the second repository.&lt;/p&gt;
&lt;p&gt;These instructions are written for a Unix shell, but they will work in other shells, including in PowerShell on Windows if the method of setting environment variables is adapted and &lt;code&gt;/dev/null&lt;/code&gt; is replaced with &lt;code&gt;NUL&lt;/code&gt;. This procedure is likely to demonstrate the problem on all systems &lt;em&gt;except&lt;/em&gt; macOS. This is due to the high-scoped &amp;quot;unknown&amp;quot; configuration that usually accompanies Apple Git, and reflects that gix-path is in practice much less vulnerable on macOS (though still potentially vulnerable).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href=&quot;https://crates.io/crates/dummyhttp&quot;&gt;&lt;code&gt;dummyhttp&lt;/code&gt;&lt;/a&gt; to serve as a local HTTP server for the demonstration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Obtain a build of &lt;code&gt;gitoxide&lt;/code&gt; with the &lt;code&gt;max&lt;/code&gt; feature set enabled. While this vulnerability affects other builds, this example requires &lt;code&gt;max&lt;/code&gt; for &lt;code&gt;http.extraHeader&lt;/code&gt; support.&lt;/p&gt;
&lt;p&gt;Running &lt;code&gt;cargo install gitoxide&lt;/code&gt; will install such a build though it may build against a patched version of &lt;code&gt;gix-path&lt;/code&gt;. Cloning the repository (&lt;a href=&quot;https://github.com/Byron/gitoxide/commit/12251eb052df30105538fa831e641eea557f13d8&quot;&gt;&lt;code&gt;12251eb&lt;/code&gt;&lt;/a&gt; and earlier are affected) and building with &lt;code&gt;cargo build&lt;/code&gt; or &lt;code&gt;cargo install --path .&lt;/code&gt; are also sufficient. In contrast, installing from published binaries with &lt;code&gt;binstall&lt;/code&gt; or &lt;code&gt;quickinstall&lt;/code&gt; does not provide the &lt;code&gt;max&lt;/code&gt; feature, as of this writing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run: &lt;code&gt;dummyhttp -i 127.0.0.1 -c 403 -v&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a separate terminal, create a new local repository and set up a mock remote and &lt;code&gt;http.extraHeader&lt;/code&gt; configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git init myrepo
cd myrepo
git remote add origin http://127.0.0.1:8080/mygit.git
git config --local http.extraHeader &apos;Authorization: Basic abcde&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the testing setup is working by running &lt;code&gt;gix fetch&lt;/code&gt; in the repository and checking that it fails in the expected way. In the terminal where that is run, a message should be shown indicating an HTTP 403 error. The more interesting output is in the terminal where &lt;code&gt;dummyhttp&lt;/code&gt; is running, which should look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;2024-30-30 03:30:16 127.0.0.1:55689 GET /myrepo.git/info/refs?service=git-upload-pack HTTP/1.1
┌─Incoming request
│ GET /myrepo.git/info/refs?service=git-upload-pack HTTP/1.1
│ Accept: */*
│ Authorization: Basic abcde
│ Git-Protocol: version=2
│ Host: 127.0.0.1:8080
│ User-Agent: git/oxide-0.42.2
┌─Outgoing response
│ HTTP/1.1 403 Forbidden
│ Content-Length: 9
│ Content-Type: text/plain; charset=utf-8
│ Date: Fri, 30 Aug 2024 03:30:16 -0400
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some details may differ, especially dates and times. But &lt;code&gt;Authorization: Basic abcde&lt;/code&gt; should be shown.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, in the terminal where you ran &lt;code&gt;gix fetch&lt;/code&gt;, try cloning a separate repository:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;gix clone http://127.0.0.1:8080/other.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check the output appended in the terminal where &lt;code&gt;dummyhttp&lt;/code&gt; is running. This is to observe that &lt;code&gt;Authorization: Basic abcde&lt;/code&gt; was rightly &lt;em&gt;not&lt;/em&gt; sent.&lt;/p&gt;
&lt;p&gt;Alternatively, if it &lt;em&gt;does&lt;/em&gt; appear, then your system may be in one of the uncommon configurations that is vulnerable without further action.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now rerun that command, but with a modified environment, to cause &lt;code&gt;gix-path&lt;/code&gt; to wrongly treat configuration from the local scope as being associated with the &lt;code&gt;git&lt;/code&gt; installation:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;env GIT_CONFIG_SYSTEM=/dev/null GIT_CONFIG_GLOBAL=/dev/null gix clone http://127.0.0.1:8080/other.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check the output appended in the terminal where &lt;code&gt;dummyhttp&lt;/code&gt; is running. Observe that &lt;code&gt;Authorization: Basic abcde&lt;/code&gt; was wrongly sent.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While this procedure uses the same remote host for both repositories, this is not a required element. If the second repository had a different, untrusted host, the extra header would still be sent.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;It is believed to be very difficult to exploit this vulnerability deliberately, due to the need either to anticipate a situation in which higher-scoped configuration variables would be absent, or to arrange for this to happen. Although any operating system may be affected, users running Apple Git on macOS are much less likely to be affected.&lt;/p&gt;
&lt;p&gt;In the example shown above, more secure general practices would avoid it: using a credential manager, or even using &lt;code&gt;http.&amp;lt;url&amp;gt;.extraHeader&lt;/code&gt; with as specific a &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; as possible, rather than the more general &lt;code&gt;http.extraHeader&lt;/code&gt;. Many scenarios are analogous: if each repository&apos;s configuration is as secure as possible for how the repository is used, and secrets are stored securely and separately, then the circumstances under which an unacceptably unsecure configuration is used, or under which a leak of credentials would occur, become unlikely.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0366: Vulnerability in cosmwasm-vm</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0366.html</id><updated>2024-08-27T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0366.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0366: Vulnerability in cosmwasm-vm"/><published>2024-08-27T12:00:00+00:00</published><summary xml:lang="en">CWA-2023-004: Excessive number of function parameters in compiled Wasm</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/cosmwasm-vm/RUSTSEC-2024-0366.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/cosmwasm-vm/RUSTSEC-2024-0366.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0366&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0366
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;CWA-2023-004: Excessive number of function parameters in compiled Wasm&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-27&quot;&gt;
          August 27, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-27&quot;&gt;
          August 27, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/cosmwasm-vm.html&quot;&gt;cosmwasm-vm&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/cosmwasm-vm&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/resource-consumption.html&quot;&gt;#resource-consumption&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/crash.html&quot;&gt;#crash&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/deadlock.html&quot;&gt;#deadlock&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md&quot;&gt;
              https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.2.8, &amp;lt;1.3.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.3.4, &amp;lt;1.4.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.4.2, &amp;lt;1.5.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.5.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;A specifically crafted Wasm file can cause the VM to consume excessive amounts of memory when compiling a contract.
This can lead to high memory usage, slowdowns, potentially a crash and can poison a lock in the VM,
preventing any further interaction with contracts.&lt;/p&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md&quot;&gt;CWA-2023-004&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry></feed>